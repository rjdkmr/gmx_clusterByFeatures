name: Linux-Wheels-Build

on:
  push:
    tags:
      - '**'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python: 311
            platform_id: manylinux_x86_64
            manylinux_image: quay.io/pypa/manylinux_2_28_x86_64

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11" # update once build dependencies are available

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.22.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_BUILD: cp38-manylinux_x86_64 cp39-manylinux_x86_64 cp310-manylinux_x86_64 cp311-manylinux_x86_64 cp311-macosx_x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_BEFORE_ALL_LINUX: bash {project}/scripts/pre_cibuildwheel.sh
          CIBW_BEFORE_ALL_MACOS: bash {project}/scripts/pre_cibuildwheel_mac.sh
          CIBW_BEFORE_BUILD: python -m pip install -r {project}/dev-requirements.txt
          CIBW_ENVIRONMENT: GMX_INSTALL=/project/external/gmx_installed GMX_SRC=/project/external/gromacs

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  publish:
    needs: build_wheels
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python: 311
            platform_id: manylinux_x86_64
            manylinux_image: quay.io/pypa/manylinux_2_28_x86_64

    steps:
      - name: Download wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: dist

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Publish wheel to PyPI
        env:
          TWINE_REPOSITORY: gmx-clusterbyfeatures
          TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*
